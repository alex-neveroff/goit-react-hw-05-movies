{"version":3,"file":"static/js/736.f6695d9c.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","sevices/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastGallery = styled.ul`\n  .title {\n    font-size: 30px;\n    text-align: center;\n    margin-bottom: 40px;\n    text-transform: uppercase;\n  }\n\n  .cast-list {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n  }\n\n  .cast-item {\n    width: calc((100% - 80px) / 6);\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    background-color: #fff;\n    border-radius: 8px;\n  }\n  .actor-text {\n    font-size: 16px;\n    padding-left: 5px;\n  }\n  .no-text {\n    font-size: 24px;\n  }\n`;\n","import { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovies from 'sevices/api';\nimport { CastGallery } from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCastDetails = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await getMovies(`/movie/${movieId}/credits`);\n        setActors(cast);\n      } catch (error) {\n        setError(error.message);\n        Notify.failure(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCastDetails();\n  }, [movieId]);\n\n  return (\n    <CastGallery>\n      <h3 className=\"title\">Movie cast</h3>\n      {loading && <Loader />}\n      {Boolean(error !== null) && <p>Error: {error}</p>}\n      {actors.length > 0 && (\n        <ul className=\"cast-list\">\n          {actors.map(actor => {\n            const actorPhoto = actor.profile_path\n              ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n              : 'https://raw.githubusercontent.com/alex-neveroff/templates/main/images/slider/unknown.jpg';\n            return (\n              <li className=\"cast-item\" key={actor.id}>\n                <img\n                  className=\"actor-photo\"\n                  src={actorPhoto}\n                  alt={actor.name}\n                  width=\"200\"\n                  height=\"300\"\n                />\n                <p className=\"actor-text\">\n                  <b>{actor.name}</b>\n                </p>\n                <p className=\"actor-text\">\n                  <b>Ð¡haracter:</b> {actor.character}\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {!loading && <p className=\"no-text\">The cast is still unknown</p>}\n    </CastGallery>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst API_KEY = '65175319ff5fdf769ef44bf4c6a21d27';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getMovies = async (pathname, page = 1, query = '') => {\n  const options = {\n    path: pathname,\n    page: page,\n    query: query,\n  };\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/${options.path}?api_key=${API_KEY}&query=${options.query}&page=${options.page}`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport default getMovies;\n"],"names":["CastGallery","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","actors","setActors","movieId","useParams","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","getCastDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovies","cast","wrap","_context","prev","next","getMovies","concat","sent","t0","message","Notify","finish","stop","apply","arguments","_jsxs","children","_jsx","className","Loader","Boolean","length","map","actor","actorPhoto","profile_path","src","alt","name","width","height","character","id","pathname","options","_yield$axios$get","data","_args","path","page","undefined","query","axios","console","log","abrupt","_x"],"sourceRoot":""}