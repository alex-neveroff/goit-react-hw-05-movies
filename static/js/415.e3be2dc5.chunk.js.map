{"version":3,"file":"static/js/415.e3be2dc5.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.js","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","pages/Home.jsx","sevices/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoadMoreButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 26px;\n  border-radius: 8px;\n  background-color: #3f51b5;\n  border: none;\n  text-decoration: none;\n  font-family: inherit;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  margin: 0 auto;\n  width: 180px;\n  height: 60px;\n  color: #fff;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.3);\n    scale: 1.1;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LoadMoreButton } from './Button.styled';\n\nconst Button = ({ onClick }) => {\n  return (\n    <LoadMoreButton type=\"button\" onClick={onClick}>\n      Load more\n    </LoadMoreButton>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const GalleryItem = styled.li`\n  cursor: pointer;\n  border-radius: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: calc((100% - 48px) / 4);\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  overflow: hidden;\n  background-color: #fff;\n\n  &:active {\n    transform: scale(0.97);\n    box-shadow: 15px 15px 15px rgba(0, 0, 0, 0.16),\n      15px 15px 15px rgba(0, 0, 0, 0.16), 15px -15px 15px rgba(0, 0, 0, 0.16),\n      -15px 15px 15px rgba(0, 0, 0, 0.16);\n  }\n\n  &:hover {\n    &:hover {\n      transform: scale(1.03);\n    }\n  }\n\n  .movie-poster {\n    border-bottom: 1px solid #adb7c3;\n    margin-bottom: 10px;\n    width: 300px;\n    height: 450px;\n  }\n\n  .movie-title {\n    text-transform: uppercase;\n    margin-bottom: 7px;\n    font-size: 16px;\n    line-height: 1.16;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-left: 5px;\n  }\n\n  .movie-year {\n    margin-bottom: 7px;\n    font-size: 16px;\n    font-weight: bold;\n    line-height: 1.16;\n    padding-left: 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GalleryItem } from './MoviesGalleryItem.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesGalleryItem = ({ movie }) => {\n  const location = useLocation();\n\n  const { title, poster_path, release_date, id } = movie;\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://raw.githubusercontent.com/alex-neveroff/templates/main/images/slider/unknown.jpg';\n\n  return (\n    <GalleryItem>\n      <Link\n        to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n        state={{ from: location }}\n      >\n        <img\n          className=\"movie-poster\"\n          src={poster}\n          alt={title}\n          width=\"300\"\n          height=\"450\"\n        />\n        <h3 className=\"movie-title\">{title}</h3>\n        <p className=\"movie-year\">{release_date}</p>\n      </Link>\n    </GalleryItem>\n  );\n};\n\nMoviesGalleryItem.propTypes = { movie: PropTypes.object.isRequired };\n\nexport default MoviesGalleryItem;\n","const { default: styled } = require('@emotion/styled');\n\nexport const Gallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 32px 16px;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoviesGalleryItem from 'components/MoviesGalleryItem/MoviesGalleryItem';\nimport { Gallery } from './MoviesGallery.styled';\n\nconst MoviesGallery = ({ movies, pageTitle }) => {\n  return (\n    <>\n      <h1 className=\"page-title\">{pageTitle}</h1>\n      <Gallery>\n        {movies.map(movie => (\n          <MoviesGalleryItem key={`${movie.id}`} movie={movie} />\n        ))}\n      </Gallery>\n    </>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n  pageTitle: PropTypes.string.isRequired,\n};\n\nexport default MoviesGallery;\n","import React, { useEffect, useState } from 'react';\nimport getMovies from 'sevices/api';\nimport { Notify } from 'notiflix';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [tradingMovies, setTradingMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isShowLoadMore, setIsShowLoadMore] = useState(false);\n\n  useEffect(() => {\n    const getTredingMovies = async () => {\n      try {\n        setLoading(true);\n        const { results, total_pages } = await getMovies(\n          'trending/movie/day',\n          currentPage\n        );\n        setTradingMovies(prevResults => [...prevResults, ...results]);\n        showLoadMoreButton(total_pages);\n      } catch (error) {\n        setError(error.message);\n        Notify.failure(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const showLoadMoreButton = totalPages => {\n      if (totalPages === currentPage) {\n        setIsShowLoadMore(false);\n        return;\n      }\n      setIsShowLoadMore(true);\n    };\n\n    getTredingMovies();\n  }, [currentPage]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {Boolean(error !== null) && <p>Error: {error}</p>}\n      {tradingMovies && (\n        <MoviesGallery movies={tradingMovies} pageTitle=\"Trending today\" />\n      )}\n      {isShowLoadMore && !loading && (\n        <Button\n          onClick={() => {\n            setCurrentPage(prevPage => prevPage + 1);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst API_KEY = '65175319ff5fdf769ef44bf4c6a21d27';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getMovies = async (pathname, page = 1, query = '') => {\n  const options = {\n    path: pathname,\n    page: page,\n    query: query,\n  };\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/${options.path}?api_key=${API_KEY}&query=${options.query}&page=${options.page}`\n    );\n    console.log(data);\n    return data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n\nexport default getMovies;\n"],"names":["LoadMoreButton","styled","_templateObject","_taggedTemplateLiteral","_ref","onClick","_jsx","type","children","GalleryItem","movie","location","useLocation","title","poster_path","release_date","id","poster","concat","_jsxs","Link","to","pathname","state","from","className","src","alt","width","height","Gallery","require","default","ul","movies","pageTitle","_Fragment","map","MoviesGalleryItem","_useState","useState","_useState2","_slicedToArray","tradingMovies","setTradingMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","currentPage","setCurrentPage","_useState9","_useState10","isShowLoadMore","setIsShowLoadMore","useEffect","getTredingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovies","results","total_pages","wrap","_context","prev","next","getMovies","sent","prevResults","_toConsumableArray","showLoadMoreButton","t0","message","Notify","finish","stop","apply","arguments","totalPages","Loader","Boolean","MoviesGallery","Button","prevPage","options","_yield$axios$get","data","_args","path","page","length","undefined","query","axios","console","log","abrupt","_x"],"sourceRoot":""}